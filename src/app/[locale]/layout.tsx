import type { Metadata } from 'next';
import { Inter as FontSans, Geist_Mono as FontMono } from 'next/font/google';
import '../globals.css';
import AppWrapper from '@/components/AppWrapper';
import { SessionProvider } from 'next-auth/react';
import { Toaster } from '@/components/ui/sonner';
import 'react-pdf/dist/Page/AnnotationLayer.css';
import 'react-pdf/dist/Page/TextLayer.css';
import React from 'react';

import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';

const fontSans = FontSans({
  variable: '--font-font-sans',
  subsets: ['latin'],
});

const fontMono = FontMono({
  variable: '--font-font-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html
      lang='en'
      className={`${fontSans.variable} ${fontMono.variable}`}
      suppressHydrationWarning
    >
      <NextIntlClientProvider>
        <body className='antialiased min-h-screen flex flex-col' suppressHydrationWarning={true}>
          <SessionProvider>
            <AppWrapper>
              <main className='flex-1'>{children}</main>
              <Toaster
                toastOptions={{
                  className: 'my-custom-toast',
                }}
              />
            </AppWrapper>
          </SessionProvider>
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
